% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get.R
\name{getOverlapData}
\alias{getOverlapData}
\title{Obtain overlapping data per timeslots}
\usage{
getOverlapData(input, dbbmm, groups, level)
}
\arguments{
\item{input}{The output of \code{\link{getOverlaps}}.}

\item{dbbmm}{The timeslot output of \code{\link{dynBBMM}}.}

\item{groups}{Character vector specifying two groups for obtaining the overlapping data.}

\item{level}{The corresponding contour level for obtaining the overlapping data.}
}
\value{
A list of areas per track, per group
}
\description{
When a timeslot analysis is performed the overlaps between pairs of tracked groups can be obtained 
according to the respective timeslots.
}
\examples{
\donttest{
# Import river shapefile
water <- actel::loadShape(path = system.file(package = "RSP"), 
 shape = "River_latlon.shp", size = 0.0001, buffer = 0.05) 

# Create a transition layer with 8 directions
tl <- actel::transitionLayer(x = water, directions = 8)

# Import example output from actel::explore() 
data(input.example) 

# Run RSP analysis
rsp.data <- runRSP(input = input.example, t.layer = tl, coord.x = "Longitude", coord.y = "Latitude")

# Run a timeslot dynamic Brownian Bridge Movement Model (dBBMM) 
dbbmm.data <- dynBBMM(input = rsp.data, base.raster = water, UTM = 56, timeframe = 12)

# Get dBBMM areas at group level
areas.group <- getAreas(dbbmm.data, type = "group", breaks = c(0.5, 0.95))

# Get overlaps between groups
overlap.data <- getOverlaps(areas.group)

# Obtain overlap data at the 50\% contour 
df.overlap <- getOverlapData(input = overlap.data, dbbmm = dbbmm.data, 
 groups = c("G1", "G2"), level = 0.5)
}

}
